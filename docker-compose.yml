version: "3.3"

volumes:
  registry-data:
  gitea-data:
  drone-data:
  influxdb-data:
  grafana-data:

services:

  proxy:
    image: traefik:1.7
    command: "--debug --docker --docker.endpoint='unix:///var/run/docker.sock' --docker.watch=true --docker.exposedByDefault=false --entryPoints='Name:http Address::80' --defaultEntryPoints='http'"
    ports:
      - 80:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  registry:
    image: registry:2
    ports:
      - 5000:5000
    volumes:
      - "registry-data:/var/lib/registry"
    labels:
      traefik.enable: "true"
      traefik.frontend.rule: "HostRegexp: registry.{domain:.+}"
      traefik.port: 5000
      traefik.protocol: "http"

  web:
    image: konradkleine/docker-registry-frontend:v2
    depends_on:
      - registry
    environment:
      ENV_DOCKER_REGISTRY_HOST: "registry"
      ENV_DOCKER_REGISTRY_PORT: 5000
    labels:
      traefik.enable: "true"
      traefik.frontend.rule: "HostRegexp: hub.{domain:.+}"
      traefik.port: 80
      traefik.protocol: "http"

  gitea:
    image: gitea/gitea:1.5
    environment:
      SSH_PORT: 2222
    ports:
      - "2222:22"
    volumes:
      - "gitea-data:/data"
    labels:
      traefik.enable: "true"
      traefik.frontend.rule: "HostRegexp: git.{domain:.+}"
      traefik.port: 3000
      traefik.protocol: "http"

  drone:
    image: drone/drone:1.0.0-rc.1
    depends_on:
      - gitea
    volumes:
      - drone-data:/var/lib/drone/
    environment:
      DRONE_OPEN: "true"
      DRONE_RPC_SECRET: "mydronesecret"
      DRONE_SERVER_HOST: "drone"
      DRONE_SERVER_PROTO: "http"
      DRONE_GITEA_SERVER: "http://gitea:3000"
      DRONE_GIT_ALWAYS_AUTH: "false"
    labels:
      traefik.enable: "true"
      traefik.frontend.rule: "HostRegexp: ci.{domain:.+}"
      traefik.port: 80
      traefik.protocol: "http"

  drone-agent:
    image: drone/agent:1.0.0-rc.1
    command: agent
    depends_on:
      - drone
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      DRONE_RPC_SERVER: "drone"
      DRONE_RPC_SECRET: "mydronesecret"
      DRONE_RUNNER_CAPACITY: 1

  influxdb:
    image: influxdb:1.6-alpine
    environment:
      INFLUXDB_DB: "demo"
      INFLUXDB_ADMIN_USER: "admin"
      INFLUXDB_ADMIN_PASSWORD: "admin"
      INFLUXDB_READ_USER: "read"
      INFLUXDB_READ_PASSWORD: "read"
      INFLUXDB_WRITE_USER: "write"
      INFLUXDB_WRITE_PASSWORD: "write"
    volumes:
      - "influxdb-data:/var/lib/influxdb"

  grafana:
    image: grafana/grafana:latest
    depends_on:
      - influxdb
    volumes:
      - "grafana-data:/var/lib/grafana"
    labels:
      traefik.enable: "true"
      traefik.frontend.rule: "HostRegexp: ops.{domain:.+}"
      traefik.port: 3000
      traefik.protocol: "http"

  telegraf:
    image: telegraf:1.8-alpine
    entrypoint: "sh"
    command: "-c 'apk --update add curl && curl -Ls https://github.com/nicholasdille/docker-cicd-env/raw/master/telegraf.conf > /etc/telegraf/telegraf.conf && exec telegraf'"
    environment:
      INFLUXDB_URL: "http://influxdb:8086"
      INFLUXDB_NAME: "demo"
      INFLUXDB_USER: "write"
      INFLUXDB_PASS: "write"
    depends_on:
      - influxdb
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
