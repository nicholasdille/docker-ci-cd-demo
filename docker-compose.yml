version: "3.3"

volumes:
  registry-data:
  gitea-data:
  drone-data:
  influxdb-data:
  grafana-data:

services:

  proxy:
    image: traefik:1.7
    command:
      - --debug
      - --accesslog=false
      - --loglevel=DEBUG
      - --entrypoints=Name:api Address::8080 Redirect.Entrypoint:https
      - --entrypoints=Name:ping Address::8081 Redirect.Entrypoint:https
      - --entrypoints=Name:http Address::80 Redirect.Entrypoint:https
      - --entrypoints=Name:https Address::443 TLS
      - --defaultentrypoints=http,https
      - --api
      - --api.entrypoint=api
      - --api.dashboard=true
      - --ping
      - --ping.entrypoint=ping
      - --docker=true
      - --docker.endpoint=unix:///var/run/docker.sock
      - --docker.watch=true
      - --docker.exposedByDefault=false
      - --docker.domain=go-nerd.de
      - --acme=true
      - --acme.acmelogging=true
      - --acme.email=${ACME_EMAIL?Variable ACME_EMAIL not set}
      - --acme.storage=/acme/acme.json
      - --acme.entrypoint=https
      - --acme.onhostrule=true
      - --acme.httpchallenge.entrypoint=http
    ports:
      - 80:80
      - 443:443
    volumes:
      - /acme:/acme
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    labels:
      traefik.enable: "true"
      traefik.api.frontend.rule: "Host: api.${DOMAIN?Variable DOMAIN is not set}"
      traefik.api.frontend.auth.basic.users: "${TRAEFIK_API_CREDS?Variable TRAEFIK_API_CREDS not set. Fill with <htpasswd -nbB admin PASS>.}"
      traefik.api.port: 8080
      traefik.ping.frontend.rule: "Host: ping.${DOMAIN?Variable DOMAIN is not set}"
      traefik.ping.port: 8081

  dind:
    image: docker:stable-dind
    privileged: true

  ide:
    image: nicholasdille/code-container
    build:
      context: github.com/nicholasdille/code-container
    environment:
      - DOCKER_HOST=tcp://dind:2375
      - EDITOR_CLONE=https://github.com/nicholasdille/Sessions
      - EDITOR_EXTENSIONS=peterjausovec.vscode-docker
    labels:
      traefik.enable: "true"
      traefik.frontend.rule: "Host: ide.${DOMAIN?Variable DOMAIN is not set}"
      traefik.frontend.auth.basic.users: "${IDE_CREDS?Variable IDE_CREDS not set. Fill with <htpasswd -nbB admin PASS>.}"
      traefik.port: 8443

  registry:
    image: registry:2
    ports:
      - 5000:5000
    volumes:
      - "registry-data:/var/lib/registry"
    labels:
      traefik.enable: "true"
      traefik.frontend.rule: "Host: registry.${DOMAIN?Variable DOMAIN is not set}"
      traefik.frontend.auth.basic.users: "${REGISTRY_CREDS?Variable REGISTRY_CREDS not set. Fill with <htpasswd -nbB admin PASS>.}"
      traefik.port: 5000

  hub:
    image: konradkleine/docker-registry-frontend:v2
    depends_on:
      - registry
    environment:
      ENV_DOCKER_REGISTRY_HOST: "registry"
      ENV_DOCKER_REGISTRY_PORT: 5000
    labels:
      traefik.enable: "true"
      traefik.frontend.rule: "Host: hub.${DOMAIN?Variable DOMAIN is not set}"
      traefik.api.frontend.auth.basic.users: "${HUB_CREDS?Variable HUB_CREDS not set. Fill with <htpasswd -nbB admin PASS>.}"
      traefik.port: 80

  gitea:
    image: gitea/gitea:1.8
    environment:
      SECRET_KEY: "gitea"
      APP_NAME: "Gitea"
      ROOT_URL: "https://git.${DOMAIN?Variable DOMAIN is not set}"
      SSH_DOMAIN: "git.${DOMAIN?Variable DOMAIN is not set}"
      SSH_PORT: 2222
    ports:
      - "2222:22"
    volumes:
      - "gitea-data:/data"
    labels:
      traefik.enable: "true"
      traefik.frontend.rule: "Host: git.${DOMAIN?Variable DOMAIN is not set}"
      traefik.port: 3000

  drone:
    image: drone/drone:1.2.1
    depends_on:
      - gitea
    volumes:
      - drone-data:/var/lib/drone/
    environment:
      DRONE_OPEN: "true"
      DRONE_RPC_SECRET: "mydronesecret"
      DRONE_SERVER_HOST: "drone"
      DRONE_SERVER_PROTO: "http"
      DRONE_GITEA_SERVER: "http://gitea:3000"
      DRONE_GIT_ALWAYS_AUTH: "false"
    labels:
      traefik.enable: "true"
      traefik.frontend.rule: "Host: ci.${DOMAIN?Variable DOMAIN is not set}"
      traefik.port: 80

  drone-agent:
    image: drone/agent:1.2.1
    command: agent
    depends_on:
      - drone
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      DRONE_RPC_SERVER: "drone"
      DRONE_RPC_SECRET: "mydronesecret"
      DRONE_RUNNER_CAPACITY: 1

  influxdb:
    image: influxdb:1.7-alpine
    environment:
      INFLUXDB_DB: "demo"
      INFLUXDB_ADMIN_USER: "admin"
      INFLUXDB_ADMIN_PASSWORD: "admin"
      INFLUXDB_READ_USER: "read"
      INFLUXDB_READ_PASSWORD: "read"
      INFLUXDB_WRITE_USER: "write"
      INFLUXDB_WRITE_PASSWORD: "write"
    volumes:
      - "influxdb-data:/var/lib/influxdb"

  grafana:
    image: grafana/grafana:latest
    environment:
      GF_SERVER_ROOT_URL: "https://ops.${DOMAIN?Variable DOMAIN is not set}"
      GF_SECURITY_ADMIN_PASSWORD: "grafana"
    depends_on:
      - influxdb
    volumes:
      - "grafana-data:/var/lib/grafana"
    labels:
      traefik.enable: "true"
      traefik.frontend.rule: "Host: ops.${DOMAIN?Variable DOMAIN is not set}"
      traefik.port: 3000

  telegraf:
    image: telegraf:1.11-alpine
    entrypoint: "sh"
    command: "-c 'echo \"$${INFLUXDB_CONF}\" > /etc/telegraf/telegraf.conf && exec telegraf'"
    environment:
      INFLUXDB_CONF: |
        [[inputs.docker]]
          endpoint = "unix:///var/run/docker.sock"

        [[outputs.influxdb]]
          urls = ["$$INFLUXDB_URL"]
          database = "$$INFLUXDB_NAME"
          username = "$$INFLUXDB_USER"
          password = "$$INFLUXDB_PASS"
      INFLUXDB_URL: "http://influxdb:8086"
      INFLUXDB_NAME: "demo"
      INFLUXDB_USER: "write"
      INFLUXDB_PASS: "write"
    depends_on:
      - influxdb
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
