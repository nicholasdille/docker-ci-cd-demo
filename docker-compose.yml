version: '2.0'
volumes:
        registry-data:
        gitea-data:
        go-server-data:
        drone-data:
        influxdb-data:
        grafana-data:
services:
        proxy:
                image: traefik:1.7
                depends_on:
                        - web
                        - gitea
                        - go-server
                        - drone
                        - influxdb
                        - grafana
                ports:
                        - 80:80
                        - 443:443
                volumes:
                        - /var/run/docker.sock:/var/run/docker.sock
                        - ./traefik/traefik.toml:/traefik.toml
        registry:
                image: registry
                ports:
                        - 5000:5000
                volumes:
                        - "registry-data:/var/lib/registry"
                labels:
                        - "traefik.enable=true"
                        - "traefik.basic.frontend.rule=Host:registry.dille.io"
                        - "traefik.basic.port=80"
                        - "traefik.basic.protocol=http"
        web:
                image: konradkleine/docker-registry-frontend:v2
                depends_on:
                        - registry
                environment:
                        ENV_DOCKER_REGISTRY_HOST: registry
                        ENV_DOCKER_REGISTRY_PORT: 5000
                labels:
                        - "traefik.enable=true"
                        - "traefik.basic.frontend.rule=Host:hub.dille.io"
                        - "traefik.basic.port=80"
                        - "traefik.basic.protocol=http"
        gitea:
                image: gitea/gitea
                environment:
                        - SSH_PORT=2222
                ports:
                        - "2222:22"
                volumes:
                        - "gitea-data:/data"
                labels:
                        - "traefik.enable=true"
                        - "traefik.basic.frontend.rule=Host:git.dille.io"
                        - "traefik.basic.port=80"
                        - "traefik.basic.protocol=http"
        go-server:
                image: gocd/gocd-server:v18.8.0
                volumes:
                        - "go-server-data:/godata"
                depends_on:
                        - gitea
                labels:
                        - "traefik.enable=true"
                        - "traefik.basic.frontend.rule=Host:gocd.dille.io"
                        - "traefik.basic.port=80"
                        - "traefik.basic.protocol=http"
        dind:
                build: github.com/nicholasdille/docker-ci-cd-demo#master:dind
                image: dind
                privileged: true
                depends_on:
                        - registry
        go-agent:
                build: github.com/nicholasdille/docker-ci-cd-demo#master:go-agent
                image: go-agent
                depends_on:
                        - go-server
                        - gitea
                        - registry
                        - dind
                environment:
                        GO_SERVER_URL: https://go-server:8154/go
                        DOCKER_HOST: tcp://dind:2375
        drone:
                image: drone/drone:0.8
                depends_on:
                        - gitea
                volumes:
                        - drone-data:/var/lib/drone/
                environment:
                        - DRONE_OPEN=true
                        - DRONE_HOST=http://127.0.0.1
                        - DRONE_GITEA=true
                        - DRONE_GITEA_URL=http://gitea:3000
                        - DRONE_SECRET=mydronesecret
                labels:
                        - "traefik.enable=true"
                        - "traefik.basic.frontend.rule=Host:ci.dille.io"
                        - "traefik.basic.port=80"
                        - "traefik.basic.protocol=http"
        drone-agent:
                image: drone/agent:0.8
                command: agent
                depends_on:
                        - drone
                volumes:
                        - /var/run/docker.sock:/var/run/docker.sock
                environment:
                        - DRONE_SERVER=drone:9000
                        - DRONE_SECRET=mydronesecret
        influxdb:
                image: influxdb:alpine
                environment:
                        INFLUXDB_DB: demo
                        INFLUXDB_ADMIN_USER: admin
                        INFLUXDB_ADMIN_PASSWORD: admin
                        INFLUXDB_READ_USER: read
                        INFLUXDB_READ_PASSWORD: read
                        INFLUXDB_WRITE_USER: write
                        INFLUXDB_WRITE_PASSWORD: write
                volumes:
                        - "influxdb-data:/var/lib/influxdb"
        grafana:
                image: grafana/grafana
                depends_on:
                        - influxdb
                volumes:
                        - "grafana-data:/var/lib/grafana"
                labels:
                        - "traefik.enable=true"
                        - "traefik.basic.frontend.rule=Host:grafana.dille.io"
                        - "traefik.basic.port=80"
                        - "traefik.basic.protocol=http"
        telegraf:
                build: github.com/nicholasdille/docker-ci-cd-demo#master:telegraf
                image: telegraf
                depends_on:
                        - influxdb
                volumes:
                        - "/var/run/docker.sock:/var/run/docker.sock"
